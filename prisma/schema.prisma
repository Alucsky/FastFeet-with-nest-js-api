generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" 
  url      = env("DATABASE_URL")
}

enum UserType {
  ADMIN
  DELIVERYMAN
  RECIPIENT
}

enum DeliveryStatus {
  PENDING
  IN_PROGRESS
  DELIVERED
  CANCELED
}

model User {
  id        String     @id @default(uuid())
  name      String
  cpf       String     @unique
  password  String
  userType  UserType
  role      UserType
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  deliveryman Deliveryman?
  recipient   Recipient?
}


model Address {
  id           String     @id @default(uuid())
  street       String
  number       String
  neighborhood String
  city         String
  postalCode   String
  state        String

  recipient    Recipient?
  deliveries   Delivery[]
}

model Recipient {
  id        String @id @default(uuid())
  userId    String @unique
  user      User   @relation(fields: [userId], references: [id])
  addressId String @unique
  address   Address @relation(fields: [addressId], references: [id])
  
  deliveries Delivery[]
}


model Deliveryman {
  id     String @id @default(uuid())
  userId String @unique
  user   User   @relation(fields: [userId], references: [id])

  deliveries Delivery[]
}


model Delivery {
  id            String         @id @default(uuid())
  name          String
  status        DeliveryStatus @default(PENDING)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt

  recipientId   String
  recipient     Recipient       @relation(fields: [recipientId], references: [id])

  deliverymanId String?
  deliveryman   Deliveryman?    @relation(fields: [deliverymanId], references: [id])

  addressId     String
  address       Address         @relation(fields: [addressId], references: [id])
}
